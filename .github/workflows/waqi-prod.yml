name: Collect WAQI (prod)

on:
  schedule:name: Collect WAQI (prod)

on:
  schedule:
    - cron: '5 * * * *'   # ทุกชั่วโมง (UTC)
  workflow_dispatch:

jobs:
  collect:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      WAQI_KEYWORD: "Bangkok"
      WAQI_MAX_STATIONS: "20"
      WAQI_OUT: "data/waqi_$(date -u +'%Y-%m').csv"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Collect snapshot
        env:
          WAQI_TOKEN: ${{ secrets.WAQI_TOKEN }}
          WAQI_KEYWORD: ${{ env.WAQI_KEYWORD }}
          WAQI_MAX_STATIONS: ${{ env.WAQI_MAX_STATIONS }}
          WAQI_OUT: ${{ env.WAQI_OUT }}
        run: |
          python collect_waqi_hourly.py

      - name: Inspect CSV head
        continue-on-error: true
        run: |
          python - << 'PY'
          import pandas as pd, os
          p = os.environ["WAQI_OUT"]
          print("CSV path:", p, "exists?", os.path.exists(p))
          if os.path.exists(p):
              df = pd.read_csv(p)
              print("shape:", df.shape)
              print(df.head(5).to_string())
          PY

      - name: Validate CSV (soft)
        run: |
          python validate_csv.py --path "${{ env.WAQI_OUT }}" --mode soft

      - name: Compress CSV to .gz
        run: |
          gzip -c "${{ env.WAQI_OUT }}" > "${{ env.WAQI_OUT }}.gz"

      - name: Disable Jekyll for GitHub Pages
        run: |
          mkdir -p docs
          touch docs/.nojekyll

      - name: Build dashboard (optional)
        run: |
          if [ -f build_dashboard.py ]; then
            python build_dashboard.py
          else
            echo "No build_dashboard.py; skipping dashboard build."
          fi

      - name: Commit & push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "${{ env.WAQI_OUT }}" "${{ env.WAQI_OUT }}.gz" docs/.nojekyll docs/index.html
          git commit -m "Append WAQI hourly (prod): $(date -u +'%Y-%m-%d %H:%M:%SZ')" || echo "No changes"
          git push

    - cron: '5 * * * *'   # ทุกชั่วโมง (UTC)
  workflow_dispatch:

jobs:
  collect:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      WAQI_KEYWORD: "Bangkok"
      WAQI_MAX_STATIONS: "20"
      WAQI_OUT: "data/waqi_$(date -u +'%Y-%m').csv"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Collect snapshot
        env:
          WAQI_TOKEN: ${{ secrets.WAQI_TOKEN }}
          WAQI_KEYWORD: ${{ env.WAQI_KEYWORD }}
          WAQI_MAX_STATIONS: ${{ env.WAQI_MAX_STATIONS }}
          WAQI_OUT: ${{ env.WAQI_OUT }}
        run: |
          python collect_waqi_hourly.py

      - name: Inspect CSV head
        continue-on-error: true
        run: |
          python - << 'PY'
import pandas as pd, os
p = os.environ["WAQI_OUT"]
print("CSV path:", p, "exists?", os.path.exists(p))
if os.path.exists(p):
    df = pd.read_csv(p)
    print("shape:", df.shape)
    print(df.head(5).to_string())
PY

      - name: Validate CSV (soft)
        run: |
          python validate_csv.py --path "${{ env.WAQI_OUT }}" --mode soft

      - name: Compress CSV to .gz
        run: |
          gzip -c "${{ env.WAQI_OUT }}" > "${{ env.WAQI_OUT }}.gz"

      - name: Disable Jekyll for GitHub Pages
        run: |
          mkdir -p docs
          touch docs/.nojekyll

      - name: Build dashboard (optional)
        run: |
          if [ -f build_dashboard.py ]; then
            python build_dashboard.py
          else
            echo "No build_dashboard.py; skipping dashboard build."
          fi

      - name: Commit & push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "${{ env.WAQI_OUT }}" "${{ env.WAQI_OUT }}.gz" docs/.nojekyll docs/index.html
          git commit -m "Append WAQI hourly (prod): $(date -u +'%Y-%m-%d %H:%M:%SZ')" || echo "No changes"
          git push
